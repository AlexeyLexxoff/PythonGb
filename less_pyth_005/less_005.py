# Последовательностью Фибоначчи называется
# последовательность чисел a0
# , a1
# , ..., an
# , ..., где
# a0
#  = 0, a1
#  = 1, ak
#  = ak-1 + ak-2 (k > 1).
# Требуется найти N-е число Фибоначчи
# Input: 7
# Output: 21
# Задание необходимо решать через рекурсию

# def Fib_num(num):
#     if num in [1, 2]:
#         return num
#     return Fib_num(num - 1 ) + Fib_num(num - 2 )

# print (Fib_num(7))
# ______________________________________________________________________


# Задача №33. Решение в группах
# Хакер Василий получил доступ к классному журналу и
# хочет заменить все свои минимальные оценки на
# максимальные. Напишите программу, которая
# заменяет оценки Василия, но наоборот: все
# максимальные – на минимальные.
# Input: 5 -> 1 3 3 3 4
# Output: 1 3 3 3 1

# numbers = [1, 3, 3, 3, 4]
# def change_num(numbers):
#     min_num = min(numbers)
#     max_num = max(numbers)
    
#     for n in range(len(numbers)):        
#         if numbers[n] == max_num:
#            numbers[n] = min_num
           
# change_num(numbers)
# print(*numbers)
# ________________________________________________________________________


# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes



# def prime_num(n):
#     if n <= 1:
#         return "No"
#     for i in range (2, n-1):
#         if n % i == 0:
#             return "No"
#         return "Yes"
# print(prime_num(5))
# ________________________________________________________________


# Задача №37. 

# Дано натуральное число N и
# последовательность из N элементов.
# Требуется вывести эту последовательность в
# обратном порядке.
# Примечание. В программе запрещается
# объявлять массивы и использовать циклы
# (даже для ввода и вывода).
# Input: 2 -> 3 4
# Output: 4 3

# def reverse_num(n, numbers):
#     if n == 0:
#         return
#     print(numbers[n-1])
#     return reverse_num(n-1,numbers)    

# reverse_num(4,[1,3,])
